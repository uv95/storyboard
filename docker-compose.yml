version: '3.8'

services:
  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - '${DB_PORT}:${DB_PORT}'
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: storyboard-server
    restart: always
    env_file:
      - ./server/.env
    ports:
      - '${PORT}:3000'
    volumes:
      - ./server:/app
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backend

  # client:
  #   build:
  #     context: ./client
  #     dockerfile: Dockerfile
  #   container_name: storyboard-client
  #   restart: always
  #   ports:
  #     - '3000:3000'
  #   volumes:
  #     - ./client:/app
  #   networks:
  #     - backend

volumes:
  postgres-data:

networks:
  backend:
    driver: bridge
